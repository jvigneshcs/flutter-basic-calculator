# This is a basic workflow to help you get started with Actions

name: Flutter Android CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'

      # Setup the flutter environment.
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.x'
          channel: 'stable'
          
      # Get flutter dependencies.
      - run: flutter pub get
    
      # Check for any formatting issues in the code.
      #- run: flutter format --set-exit-if-changed .
    
      # Statically analyze the Dart code for any errors.
      - run: flutter analyze .
    
      # Run widget tests for our flutter project.
      #- run: flutter test
    
      # Build apk.
      - run: flutter build apk
    
      # Upload generated apk to the artifacts.
      - uses: actions/upload-artifact@v1
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk
